// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.DataAccess;

namespace OngProject.Migrations
{
    [DbContext(typeof(OngProjectDbContext))]
    [Migration("20220624214611_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OngProject.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Attending sporting events",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(6043),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://d3hjzzsa8cr26l.cloudfront.net/c0b7ce93-2d00-11e6-bce7-6ff134176666.jpg",
                            IsDeleted = false,
                            Name = "(Social Activities)",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(6060)
                        },
                        new
                        {
                            Id = 2,
                            Content = "Puppetry",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8147),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://d3hjzzsa8cr26l.cloudfront.net/fdf731b0-ac0d-11eb-80db-158c47a6e2fc.jpg",
                            IsDeleted = false,
                            Name = "(Social Activities)",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8156)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Going to the park",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8162),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://d3hjzzsa8cr26l.cloudfront.net/3470a674-6a05-11ea-b459-9d2edb98bc96.jpg",
                            IsDeleted = false,
                            Name = "(Social Activities)",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8164)
                        },
                        new
                        {
                            Id = 4,
                            Content = "Going to concerts",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8167),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://d3hjzzsa8cr26l.cloudfront.net/340eb0ee-6a05-11ea-b459-9d2edb98bc96.jpg",
                            IsDeleted = false,
                            Name = "(Social Activities)",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8169)
                        },
                        new
                        {
                            Id = 5,
                            Content = "Volunteering",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8173),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://d3hjzzsa8cr26l.cloudfront.net/cfe95939-2d0d-11e6-a4bd-71dbf5f2854a.jpg",
                            IsDeleted = false,
                            Name = "(Social Activities)",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 915, DateTimeKind.Local).AddTicks(8175)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 919, DateTimeKind.Local).AddTicks(8062),
                            Description = "Animals and pets",
                            Image = "https://www.jg-cdn.com/assets/jg-homepage/339d41967797c7d4f41a0addcc659196.svg",
                            IsDeleted = false,
                            Name = "Animals and pets",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 919, DateTimeKind.Local).AddTicks(8084)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(280),
                            Description = "Art and culture",
                            Image = "https://www.jg-cdn.com/assets/jg-homepage/187aa4c1ceded5ddeab457ba26c1eb65.svg",
                            IsDeleted = false,
                            Name = "Art and culture",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(291)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(298),
                            Description = "Education",
                            Image = "https://www.jg-cdn.com/assets/jg-homepage/7d2169169f7d1316cec9b5733dd59718.svg",
                            IsDeleted = false,
                            Name = "Education",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(300)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(303),
                            Description = "International aid",
                            Image = "https://www.jg-cdn.com/assets/jg-homepage/675f647d01d3751a0113d305ce2baf8e.svg",
                            IsDeleted = false,
                            Name = "International aid",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(305)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(309),
                            Description = "Disability",
                            Image = "https://www.jg-cdn.com/assets/jg-homepage/cec5dbbde623a23c0e7239e969a366d1.svg",
                            IsDeleted = false,
                            Name = "Disability",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 920, DateTimeKind.Local).AddTicks(311)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("NewId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 905, DateTimeKind.Local).AddTicks(7974),
                            Description = "Miembro activo de la organización",
                            FacebookUrl = "https://www.facebook.com/daveMust22",
                            ImageUrl = "https://gcdn.emol.cl/rock/files/2019/09/megadeth-dave-mustaine.jpg",
                            InstagramUrl = "https://www.instagram.com/daveMust22",
                            IsDeleted = false,
                            LinkedInUrl = "https://www.linkedin.com/in/dave-mustaine",
                            Name = "Dave Mustaine",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 907, DateTimeKind.Local).AddTicks(4593)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(681),
                            Description = "Miembro activo de la organización",
                            FacebookUrl = "https://www.facebook.com/johnPetru1",
                            ImageUrl = "https://magazyngitarzysta.pl/i/images/9/7/6/dz0yNTE4Jmg9MzAwMA==_src_140976-GettyImages-911852516.jpg",
                            InstagramUrl = "https://www.instagram.com/johnPetru1",
                            IsDeleted = false,
                            LinkedInUrl = "https://www.linkedin.com/in/john-petrucci",
                            Name = "John Petrucci",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(696)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(706),
                            Description = "Miembro activo de la organización",
                            FacebookUrl = "https://www.facebook.com/steveVai66",
                            ImageUrl = "https://273710-849646-raikfcquaxqncofqfm.stackpathdns.com/wp-content/uploads/2012/07/Steve-Vai-pic.jpg",
                            InstagramUrl = "https://www.instagram.com/steveVai66",
                            IsDeleted = false,
                            LinkedInUrl = "https://www.linkedin.com/in/steve-vai",
                            Name = "Steve Vai",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(709)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(713),
                            Description = "Miembro activo de la organización",
                            FacebookUrl = "https://www.facebook.com/joeStriani1",
                            ImageUrl = "https://th.bing.com/th/id/OIP.3X4EMm2OGqVqR77JQvJzagAAAA?pid=ImgDet&rs=1",
                            InstagramUrl = "https://www.instagram.com/joeStriani1",
                            IsDeleted = false,
                            LinkedInUrl = "https://www.linkedin.com/in/joe-satriani",
                            Name = "Joe Satriani",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(715)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(719),
                            Description = "Miembro activo de la organización",
                            FacebookUrl = "https://www.facebook.com/juaniGue",
                            ImageUrl = "https://th.bing.com/th/id/OIP.P4OqoL2OPCNYbr1uSbYvWAAAAA?w=148&h=152&c=7&r=0&o=5&pid=1.7",
                            InstagramUrl = "https://www.instagram.com/juaniGue",
                            IsDeleted = false,
                            LinkedInUrl = "https://www.linkedin.com/in/juan-guerra",
                            Name = "Juan Guerra",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 908, DateTimeKind.Local).AddTicks(721)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "No news, good news",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 917, DateTimeKind.Local).AddTicks(7037),
                            Image = "https://www.vidimsoft.com/sites/default/files/styles/blog_lg/public/articles/nonewsyet.jpg?itok=51EKSfgX",
                            IsDeleted = false,
                            Name = "No news",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 917, DateTimeKind.Local).AddTicks(7054)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Content = "No news, good news",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 917, DateTimeKind.Local).AddTicks(9946),
                            Image = "https://www.vidimsoft.com/sites/default/files/styles/blog_lg/public/articles/nonewsyet.jpg?itok=51EKSfgX",
                            IsDeleted = false,
                            Name = "No news",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 917, DateTimeKind.Local).AddTicks(9958)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Content = "No news, good news",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(45),
                            Image = "https://www.vidimsoft.com/sites/default/files/styles/blog_lg/public/articles/nonewsyet.jpg?itok=51EKSfgX",
                            IsDeleted = false,
                            Name = "No news",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(49)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Content = "No news, good news",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(54),
                            Image = "https://www.vidimsoft.com/sites/default/files/styles/blog_lg/public/articles/nonewsyet.jpg?itok=51EKSfgX",
                            IsDeleted = false,
                            Name = "No news",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(56)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Content = "No news, good news",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(59),
                            Image = "https://www.vidimsoft.com/sites/default/files/styles/blog_lg/public/articles/nonewsyet.jpg?itok=51EKSfgX",
                            IsDeleted = false,
                            Name = "No news",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 918, DateTimeKind.Local).AddTicks(62)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Welcome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutUs = "Somos Más",
                            Address = "Somos Más",
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 923, DateTimeKind.Local).AddTicks(4031),
                            Email = "somosfundacionmas@gmail.com",
                            FacebookUrl = "Somos_Más",
                            Image = "Somos Más",
                            InstagramUrl = "Somos_Más",
                            IsDeleted = false,
                            LinkedInUrl = "Somos Más",
                            Name = "Somos Más",
                            Phone = 1160112988,
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 923, DateTimeKind.Local).AddTicks(4049),
                            Welcome = "Somos Más"
                        });
                });

            modelBuilder.Entity("OngProject.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 921, DateTimeKind.Local).AddTicks(6073),
                            Description = "Administrator",
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 921, DateTimeKind.Local).AddTicks(6091)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 921, DateTimeKind.Local).AddTicks(7563),
                            Description = "Owner",
                            IsDeleted = false,
                            Name = "Owner",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 921, DateTimeKind.Local).AddTicks(7572)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Entities.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(4304),
                            Description = "Just amazing. Thank You! The very best. Ong Project Alkemy is the real deal!",
                            Image = "https://www.fakepersongenerator.com/Face/female/female20111023425786712.jpg",
                            IsDeleted = false,
                            Name = "Florence F Brooks",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(4334)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6493),
                            Description = "Thank You! Just what I was looking for. All good. Ong Project Alkemy was worth a fortune to my company.",
                            Image = "https://www.fakepersongenerator.com/Face/female/female1022482473236.jpg",
                            IsDeleted = false,
                            Name = "Kathie D Green",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6503)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6510),
                            Description = "Ong Project Alkemy impressed me on multiple levels. Ong Project Alkemy is the real deal!",
                            Image = "https://www.fakepersongenerator.com/Face/male/male1084237525421.jpg",
                            IsDeleted = false,
                            Name = "Claude V Patterson",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6512)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6515),
                            Description = "Ong Project Alkemy is worth much more than I paid.",
                            Image = "https://www.fakepersongenerator.com/Face/male/male20151086250510345.jpg",
                            IsDeleted = false,
                            Name = "David R Andrews",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6517)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6521),
                            Description = "We were treated like royalty.",
                            Image = "https://www.fakepersongenerator.com/Face/male/male1085177699859.jpg",
                            IsDeleted = false,
                            Name = "Frederick I Giroux",
                            UpdatedAt = new DateTime(2022, 6, 24, 18, 46, 9, 913, DateTimeKind.Local).AddTicks(6523)
                        });
                });

            modelBuilder.Entity("OngProject.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OngProject.Entities.Comment", b =>
                {
                    b.HasOne("OngProject.Entities.News", "New")
                        .WithMany("Comments")
                        .HasForeignKey("NewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OngProject.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("New");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OngProject.Entities.News", b =>
                {
                    b.HasOne("OngProject.Entities.Category", "Category")
                        .WithMany("News")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Entities.Slide", b =>
                {
                    b.HasOne("OngProject.Entities.Organization", "Organization")
                        .WithMany("Slides")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OngProject.Entities.User", b =>
                {
                    b.HasOne("OngProject.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OngProject.Entities.Category", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("OngProject.Entities.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("OngProject.Entities.Organization", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("OngProject.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OngProject.Entities.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
